{"version":3,"file":"Text.30ff5f29.js","sources":["../../src/components/Text.tsx"],"sourcesContent":["import { clsx } from 'clsx';\nimport { Slot } from '@radix-ui/react-slot'\nimport { ReactNode } from 'react';\n\nexport interface TextProps{\n    size?: 'sm' | 'md' | 'lg';\n    children: ReactNode;\n    asChild?: boolean;\n    className?: string;\n}\n//o children é porque o texto precisa ter algo dentro\n//o children era Text, mas tive que mudar para ReactNode poder receber a tag além do texto\n\nexport function Text({ size = 'md', children, asChild, className }: TextProps){\n    const Comp = asChild ? Slot : 'span' //caso eu receba uma tag, o asChild recebe true, e eu uso o Slot, caso asChild seja falso, eu uso o span\n\n    return(\n        <Comp className={clsx(\n            'text-gray-100 font-sans',\n            {\n                'text-xs': size === 'sm',\n                'text-sn': size === 'md',\n                'text-md': size === 'lg',\n            },\n            className,\n            )}\n        >{children}</Comp>\n    )\n}"],"names":["Text","size","children","asChild","_jsx","Slot","clsx","className","__name"],"mappings":"qNAaO,SAAAA,EAAA,CAAc,KAAAC,EAAA,KAAS,SAAAC,EAAMA,QAAAA,EAAUC,UAAAA,CAA8B,EAAA,CAGxE,OAAAC,EAFAD,EAAAE,EAAA,OAEA,CACS,UAAAC,EAAA,0BAAA,CAED,UAAAL,IAAA,KACwB,UAAAA,IAAA,KACA,UAAAA,IAAA,IACA,EAAAM,CAAA,EAEf,SAAAL,CACP,CAAA,CAGd,CAfOM,EAAAR,EAAA"}